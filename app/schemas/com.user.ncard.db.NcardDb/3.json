{
  "formatVersion": 1,
  "database": {
    "version": 3,
    "identityHash": "a09e06d118df5cc27dc680efd937eef1",
    "entities": [
      {
        "tableName": "User",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `email` TEXT, `username` TEXT, `phoneNumber` TEXT, `firstName` TEXT, `lastName` TEXT, `profileImageUrl` TEXT, `thumbnailUrl` TEXT, `summary` TEXT, `country` TEXT, `city` TEXT, `address` TEXT, `postcode` TEXT, `gender` TEXT, `nationality` TEXT, `status` TEXT, `birthday` TEXT, `remark` TEXT, `createdAt` TEXT, `updatedAt` TEXT, `qualification` TEXT, `chatId` INTEGER, `chatPassword` TEXT, `mutualFriendCount` INTEGER, `nameInContact` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "phoneNumber",
            "columnName": "phoneNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "firstName",
            "columnName": "firstName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastName",
            "columnName": "lastName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "profileImageUrl",
            "columnName": "profileImageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "thumbnailUrl",
            "columnName": "thumbnailUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "summary",
            "columnName": "summary",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "country",
            "columnName": "country",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "city",
            "columnName": "city",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address",
            "columnName": "address",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "postcode",
            "columnName": "postcode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "gender",
            "columnName": "gender",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "nationality",
            "columnName": "nationality",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "birthday",
            "columnName": "birthday",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "remark",
            "columnName": "remark",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "qualification",
            "columnName": "qualification",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "chatId",
            "columnName": "chatId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "chatPassword",
            "columnName": "chatPassword",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "mutualFriendCount",
            "columnName": "mutualFriendCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "nameInContact",
            "columnName": "nameInContact",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Friend",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `email` TEXT, `username` TEXT, `phoneNumber` TEXT, `firstName` TEXT, `lastName` TEXT, `profileImageUrl` TEXT, `thumbnailUrl` TEXT, `summary` TEXT, `country` TEXT, `city` TEXT, `address` TEXT, `postcode` TEXT, `gender` TEXT, `nationality` TEXT, `birthday` TEXT, `remark` TEXT, `createdAt` TEXT, `updatedAt` TEXT, `qualification` TEXT, `chatId` INTEGER, `chatPassword` TEXT, `status` TEXT, `isChecked` INTEGER, `jobs` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "phoneNumber",
            "columnName": "phoneNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "firstName",
            "columnName": "firstName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastName",
            "columnName": "lastName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "profileImageUrl",
            "columnName": "profileImageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "thumbnailUrl",
            "columnName": "thumbnailUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "summary",
            "columnName": "summary",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "country",
            "columnName": "country",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "city",
            "columnName": "city",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address",
            "columnName": "address",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "postcode",
            "columnName": "postcode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "gender",
            "columnName": "gender",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "nationality",
            "columnName": "nationality",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "birthday",
            "columnName": "birthday",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "remark",
            "columnName": "remark",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "qualification",
            "columnName": "qualification",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "chatId",
            "columnName": "chatId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "chatPassword",
            "columnName": "chatPassword",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isChecked",
            "columnName": "isChecked",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "jobs",
            "columnName": "jobs",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Filter",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`name` TEXT NOT NULL, `type` TEXT NOT NULL, `parent` TEXT NOT NULL, PRIMARY KEY(`name`, `type`))",
        "fields": [
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "parent",
            "columnName": "parent",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "name",
            "type"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "TagPost",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `name` TEXT NOT NULL, `tagGroupId` INTEGER NOT NULL, `selected` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tagGroupId",
            "columnName": "tagGroupId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "selected",
            "columnName": "selected",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "TagGroupPost",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `name` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CatalogueScreenTracking",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `name` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CataloguePostScreenTracking",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`postId` INTEGER NOT NULL, `screenTrackingId` INTEGER NOT NULL, PRIMARY KEY(`postId`, `screenTrackingId`))",
        "fields": [
          {
            "fieldPath": "postId",
            "columnName": "postId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "screenTrackingId",
            "columnName": "screenTrackingId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "postId",
            "screenTrackingId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CataloguePost",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `text` TEXT NOT NULL, `photoUrls` TEXT NOT NULL, `videoUrl` TEXT, `videoThumbnailUrl` TEXT NOT NULL, `type` TEXT NOT NULL, `createdAt` TEXT NOT NULL, `updatedAt` TEXT NOT NULL, `visibility` TEXT NOT NULL, `postCategory` TEXT NOT NULL, `tags` TEXT NOT NULL, `owner_id` INTEGER NOT NULL, `owner_name` TEXT NOT NULL, `owner_profileImageUrl` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "text",
            "columnName": "text",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "photoUrls",
            "columnName": "photoUrls",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "videoUrl",
            "columnName": "videoUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "videoThumbnailUrl",
            "columnName": "videoThumbnailUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "visibility",
            "columnName": "visibility",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "postCategory",
            "columnName": "postCategory",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tags",
            "columnName": "tags",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "owner.id",
            "columnName": "owner_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "owner.name",
            "columnName": "owner_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "owner.profileImageUrl",
            "columnName": "owner_profileImageUrl",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CatalogueComment",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `ownerId` INTEGER NOT NULL, `ownerName` TEXT, `ownerImageUrl` TEXT, `content` TEXT NOT NULL, `createdAt` TEXT NOT NULL, `postId` INTEGER NOT NULL, PRIMARY KEY(`id`, `ownerId`, `postId`), FOREIGN KEY(`postId`) REFERENCES `CataloguePost`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ownerId",
            "columnName": "ownerId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ownerName",
            "columnName": "ownerName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ownerImageUrl",
            "columnName": "ownerImageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "postId",
            "columnName": "postId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id",
            "ownerId",
            "postId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "CataloguePost",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "postId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "CatalogueLike",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `ownerId` INTEGER NOT NULL, `ownerName` TEXT NOT NULL, `postId` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`postId`) REFERENCES `CataloguePost`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ownerId",
            "columnName": "ownerId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ownerName",
            "columnName": "ownerName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "postId",
            "columnName": "postId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "CataloguePost",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "postId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "NameCard",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `name` TEXT, `title` TEXT, `role` TEXT, `email` TEXT, `company` TEXT, `mobile` TEXT, `address` TEXT, `urls` TEXT, `social` TEXT, `im` TEXT, `companyLogoUrl` TEXT, `backgroundUrl` TEXT, `description` TEXT, `country` TEXT, `nationality` TEXT, `industry` TEXT, `gender` TEXT, `birthday` TEXT, `mediaUrls` TEXT, `certUrls` TEXT, `tel1` TEXT, `tel2` TEXT, `did` TEXT, `qualification` TEXT, `website` TEXT, `fax` TEXT, `remark` TEXT, `isChecked` INTEGER, `frontUrl` TEXT, `backUrl` TEXT, `jobId` INTEGER, `userId` INTEGER, `createdAt` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "role",
            "columnName": "role",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "company",
            "columnName": "company",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "mobile",
            "columnName": "mobile",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address",
            "columnName": "address",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "urls",
            "columnName": "urls",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "social",
            "columnName": "social",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "im",
            "columnName": "im",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "companyLogoUrl",
            "columnName": "companyLogoUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "backgroundUrl",
            "columnName": "backgroundUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "country",
            "columnName": "country",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "nationality",
            "columnName": "nationality",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "industry",
            "columnName": "industry",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "gender",
            "columnName": "gender",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "birthday",
            "columnName": "birthday",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "mediaUrls",
            "columnName": "mediaUrls",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "certUrls",
            "columnName": "certUrls",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tel1",
            "columnName": "tel1",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tel2",
            "columnName": "tel2",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "did",
            "columnName": "did",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "qualification",
            "columnName": "qualification",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "website",
            "columnName": "website",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "fax",
            "columnName": "fax",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "remark",
            "columnName": "remark",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isChecked",
            "columnName": "isChecked",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "frontUrl",
            "columnName": "frontUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "backUrl",
            "columnName": "backUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "jobId",
            "columnName": "jobId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "group_item",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `name` TEXT NOT NULL, `members` TEXT, `nameCards` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "members",
            "columnName": "members",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "nameCards",
            "columnName": "nameCards",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ChatDialog",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`dialogId` TEXT, `ownerUserId` INTEGER, `recipientId` INTEGER, `type` INTEGER, `name` TEXT, `photo` TEXT, `lastMessageText` TEXT, `lastMessageDate` INTEGER, `lastMessageContentType` TEXT, `lastMessageSenderId` INTEGER, `unreadMessagesCount` INTEGER, `occupantIds` TEXT, `createdAt` INTEGER, `updatedAt` INTEGER, `data` TEXT, PRIMARY KEY(`dialogId`))",
        "fields": [
          {
            "fieldPath": "dialogId",
            "columnName": "dialogId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ownerUserId",
            "columnName": "ownerUserId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "recipientId",
            "columnName": "recipientId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "photo",
            "columnName": "photo",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastMessageText",
            "columnName": "lastMessageText",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastMessageDate",
            "columnName": "lastMessageDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastMessageContentType",
            "columnName": "lastMessageContentType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastMessageSenderId",
            "columnName": "lastMessageSenderId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "unreadMessagesCount",
            "columnName": "unreadMessagesCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "occupantIds",
            "columnName": "occupantIds",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data",
            "columnName": "data",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "dialogId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ChatMessage",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`messageId` TEXT, `dialogId` TEXT, `recipientId` INTEGER, `senderId` INTEGER, `senderName` TEXT, `senderAvatar` TEXT, `text` TEXT, `messageType` TEXT, `systemMessageType` TEXT, `dateSent` INTEGER, `createdAt` INTEGER, `updatedAt` INTEGER, `isRead` INTEGER, `chat_content_type` TEXT NOT NULL, `notification_type` TEXT, `save_to_history` TEXT, `sender_date_sent` INTEGER, `location_lat` REAL, `location_lng` REAL, `location_name` TEXT, `location_address` TEXT, `file_type` TEXT, `file_remoteUrl` TEXT, `file_duration` TEXT, `file_thumbnailRemoteUrl` TEXT, `credit_id` INTEGER, `credit_title` TEXT, `credit_type` TEXT, `credit_status` TEXT, `credit_createdAt` TEXT, `credit_receiptTime` TEXT, `credit_paymentMethod` TEXT, `credit_paymentMethodInfo` TEXT, `credit_credit_amount_currency` TEXT, `credit_credit_amount_amount` REAL, `credit_credit_sender_id` INTEGER, `credit_credit_sender_name` TEXT, `credit_credit_sender_profileImageUrl` TEXT, `credit_credit_receiver_id` INTEGER, `credit_credit_receiver_name` TEXT, `credit_credit_receiver_profileImageUrl` TEXT, `credit_credit_balance_currency` TEXT, `credit_credit_balance_amount` REAL, `gift_id` INTEGER, `gift_purchasedItemId` INTEGER, `gift_status` TEXT, `gift_message` TEXT, `gift_createdAt` TEXT, `gift_updatedAt` TEXT, `gift_gift_product_id` INTEGER, `gift_gift_product_title` TEXT, `gift_gift_product_description` TEXT, `gift_gift_product_imageUrl` TEXT, `gift_gift_product_sku` TEXT, `gift_gift_product_virtual` INTEGER, `gift_gift_product_onSale` INTEGER, `gift_gift_product_featured` INTEGER, `gift_gift_product_categories` TEXT, `gift_gift_product_imageUrls` TEXT, `gift_gift_product_inStock` INTEGER, `gift_gift_product_stockQuantity` INTEGER, `gift_gift_product_vendorName` TEXT, `gift_gift_product_count` INTEGER, `gift_gift_product_gift_price_currency` TEXT, `gift_gift_product_gift_price_amount` REAL, `gift_gift_product_gift_rep_rice_currency` TEXT, `gift_gift_product_gift_rep_rice_amount` REAL, `gift_gift_product_gift_sale_price_currency` TEXT, `gift_gift_product_gift_sale_price_amount` REAL, `gift_gift_sender_id` INTEGER, `gift_gift_sender_name` TEXT, `gift_gift_sender_profileImageUrl` TEXT, `gift_gift_receiver_id` INTEGER, `gift_gift_receiver_name` TEXT, `gift_gift_receiver_profileImageUrl` TEXT, `system_category` TEXT, `system_action` TEXT, `system_data` TEXT, PRIMARY KEY(`messageId`, `dialogId`))",
        "fields": [
          {
            "fieldPath": "messageId",
            "columnName": "messageId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dialogId",
            "columnName": "dialogId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "recipientId",
            "columnName": "recipientId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "senderId",
            "columnName": "senderId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "senderName",
            "columnName": "senderName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "senderAvatar",
            "columnName": "senderAvatar",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "text",
            "columnName": "text",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "messageType",
            "columnName": "messageType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "systemMessageType",
            "columnName": "systemMessageType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dateSent",
            "columnName": "dateSent",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isRead",
            "columnName": "isRead",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "customParam.chat_content_type",
            "columnName": "chat_content_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "customParam.notification_type",
            "columnName": "notification_type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.save_to_history",
            "columnName": "save_to_history",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.sender_date_sent",
            "columnName": "sender_date_sent",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "customParam.chat_location.lat",
            "columnName": "location_lat",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "customParam.chat_location.lng",
            "columnName": "location_lng",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "customParam.chat_location.name",
            "columnName": "location_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.chat_location.address",
            "columnName": "location_address",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.chat_file.type",
            "columnName": "file_type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.chat_file.remoteUrl",
            "columnName": "file_remoteUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.chat_file.duration",
            "columnName": "file_duration",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.chat_file.thumbnailRemoteUrl",
            "columnName": "file_thumbnailRemoteUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.credit_transaction.id",
            "columnName": "credit_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "customParam.credit_transaction.title",
            "columnName": "credit_title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.credit_transaction.type",
            "columnName": "credit_type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.credit_transaction.status",
            "columnName": "credit_status",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.credit_transaction.createdAt",
            "columnName": "credit_createdAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.credit_transaction.receiptTime",
            "columnName": "credit_receiptTime",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.credit_transaction.paymentMethod",
            "columnName": "credit_paymentMethod",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.credit_transaction.paymentMethodInfo",
            "columnName": "credit_paymentMethodInfo",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.credit_transaction.amount.currency",
            "columnName": "credit_credit_amount_currency",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.credit_transaction.amount.amount",
            "columnName": "credit_credit_amount_amount",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "customParam.credit_transaction.sender.id",
            "columnName": "credit_credit_sender_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "customParam.credit_transaction.sender.name",
            "columnName": "credit_credit_sender_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.credit_transaction.sender.profileImageUrl",
            "columnName": "credit_credit_sender_profileImageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.credit_transaction.receiver.id",
            "columnName": "credit_credit_receiver_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "customParam.credit_transaction.receiver.name",
            "columnName": "credit_credit_receiver_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.credit_transaction.receiver.profileImageUrl",
            "columnName": "credit_credit_receiver_profileImageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.credit_transaction.balance.currency",
            "columnName": "credit_credit_balance_currency",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.credit_transaction.balance.amount",
            "columnName": "credit_credit_balance_amount",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.id",
            "columnName": "gift_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.purchasedItemId",
            "columnName": "gift_purchasedItemId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.status",
            "columnName": "gift_status",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.message",
            "columnName": "gift_message",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.createdAt",
            "columnName": "gift_createdAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.updatedAt",
            "columnName": "gift_updatedAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.product.id",
            "columnName": "gift_gift_product_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.product.title",
            "columnName": "gift_gift_product_title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.product.description",
            "columnName": "gift_gift_product_description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.product.imageUrl",
            "columnName": "gift_gift_product_imageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.product.sku",
            "columnName": "gift_gift_product_sku",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.product.virtual",
            "columnName": "gift_gift_product_virtual",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.product.onSale",
            "columnName": "gift_gift_product_onSale",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.product.featured",
            "columnName": "gift_gift_product_featured",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.product.categories",
            "columnName": "gift_gift_product_categories",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.product.imageUrls",
            "columnName": "gift_gift_product_imageUrls",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.product.inStock",
            "columnName": "gift_gift_product_inStock",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.product.stockQuantity",
            "columnName": "gift_gift_product_stockQuantity",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.product.vendorName",
            "columnName": "gift_gift_product_vendorName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.product.count",
            "columnName": "gift_gift_product_count",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.product.price.currency",
            "columnName": "gift_gift_product_gift_price_currency",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.product.price.amount",
            "columnName": "gift_gift_product_gift_price_amount",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.product.regularPrice.currency",
            "columnName": "gift_gift_product_gift_rep_rice_currency",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.product.regularPrice.amount",
            "columnName": "gift_gift_product_gift_rep_rice_amount",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.product.salePrice.currency",
            "columnName": "gift_gift_product_gift_sale_price_currency",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.product.salePrice.amount",
            "columnName": "gift_gift_product_gift_sale_price_amount",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.sender.id",
            "columnName": "gift_gift_sender_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.sender.name",
            "columnName": "gift_gift_sender_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.sender.profileImageUrl",
            "columnName": "gift_gift_sender_profileImageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.receiver.id",
            "columnName": "gift_gift_receiver_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.receiver.name",
            "columnName": "gift_gift_receiver_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.gift.receiver.profileImageUrl",
            "columnName": "gift_gift_receiver_profileImageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.uxc_system_info.category",
            "columnName": "system_category",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.uxc_system_info.action",
            "columnName": "system_action",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "customParam.uxc_system_info.data",
            "columnName": "system_data",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "messageId",
            "dialogId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ChatUser",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` INTEGER, `fullName` TEXT, `email` TEXT, `login` TEXT, `phone` TEXT, `website` TEXT, `lastRequestAt` INTEGER, `createdAt` INTEGER, `updatedAt` INTEGER, `data` TEXT, PRIMARY KEY(`userId`))",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "fullName",
            "columnName": "fullName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "login",
            "columnName": "login",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "phone",
            "columnName": "phone",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "website",
            "columnName": "website",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastRequestAt",
            "columnName": "lastRequestAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "data",
            "columnName": "data",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "userId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "job",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `jobTitle` TEXT, `industry` TEXT, `companyEmail` TEXT, `companyName` TEXT, `mobile` TEXT, `tel1` TEXT, `tel2` TEXT, `address` TEXT, `description` TEXT, `country` TEXT, `from` TEXT, `to` TEXT, `media` TEXT, `cert` TEXT, `userId` INTEGER NOT NULL, `did` TEXT, `fax` TEXT, `website` TEXT, `card_id` INTEGER, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "jobTitle",
            "columnName": "jobTitle",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "industry",
            "columnName": "industry",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "companyEmail",
            "columnName": "companyEmail",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "companyName",
            "columnName": "companyName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "mobile",
            "columnName": "mobile",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tel1",
            "columnName": "tel1",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tel2",
            "columnName": "tel2",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address",
            "columnName": "address",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "country",
            "columnName": "country",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "from",
            "columnName": "from",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "to",
            "columnName": "to",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "media",
            "columnName": "media",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cert",
            "columnName": "cert",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "did",
            "columnName": "did",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "fax",
            "columnName": "fax",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "website",
            "columnName": "website",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cardId",
            "columnName": "card_id",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "BroadcastGroup",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `name` TEXT NOT NULL, `memberIds` TEXT, `members` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "memberIds",
            "columnName": "memberIds",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "members",
            "columnName": "members",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "NCardInfo",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `friendRequest` INTEGER, `friendRequestSent` INTEGER, `friendRecommendation` INTEGER, `cardRecommendation` INTEGER, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "friendRequest",
            "columnName": "friendRequest",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "friendRequestSent",
            "columnName": "friendRequestSent",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "friendRecommendation",
            "columnName": "friendRecommendation",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "cardRecommendation",
            "columnName": "cardRecommendation",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \"a09e06d118df5cc27dc680efd937eef1\")"
    ]
  }
}